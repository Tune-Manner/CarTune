Index: src/pages/music/Playlist.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState } from 'react';\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { FiShare } from \"react-icons/fi\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { BsFillPlayFill } from \"react-icons/bs\";\r\nimport './Playlist.css';  // CSS 파일 추가\r\nimport { useNavigate,useLocation } from \"react-router-dom\";\r\n\r\nfunction Playlist() {\r\n    const [playlistDetails, setPlaylistDetails] = useState(null);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const { entities } = location.state || {};\r\n\r\n    // 로고 클릭 시 메인 페이지로 이동\r\n    const onClickHandler = () => navigate(\"/\");\r\n\r\n    const containerStyle = {\r\n        paddingTop: 50,\r\n        textAlign: 'center',\r\n        height: '100vh',\r\n        background: 'linear-gradient(135deg, #1e1e1e, #3B2951)',\r\n        color: 'white'\r\n    };\r\n  \r\n    const fetchLatestPlaylist = async () => {\r\n        try {\r\n            const response = await axios.get('http://127.0.0.1:8000/latest_playlist');\r\n            const { playlist_id, refresh_token, playlist_name } = response.data;\r\n            const accessToken = await getAccessToken(refresh_token);\r\n            fetchPlaylistDetails(playlist_id, accessToken);\r\n        } catch (error) {\r\n            console.error('최신 플레이리스트 정보를 가져오는 중 오류 발생:', error);\r\n        }\r\n    };\r\n\r\n    const getAccessToken = async (refreshToken) => {\r\n        try {\r\n            const response = await axios.post('https://accounts.spotify.com/api/token', null, {\r\n                params: {\r\n                    grant_type: 'refresh_token',\r\n                    refresh_token: refreshToken,\r\n                    client_id: 'ac56d5b5d54b42f18ebdae8323547f75',\r\n                    client_secret: process.env.REACT_APP_CLIENT_SECRET,\r\n                },\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n            });\r\n            return response.data.access_token;\r\n        } catch (error) {\r\n            console.error('액세스 토큰을 가져오는 중 오류 발생:', error);\r\n        }\r\n    };\r\n\r\n    const fetchPlaylistDetails = async (playlistId, accessToken) => {\r\n        try {\r\n            const response = await axios.get(`https://api.spotify.com/v1/playlists/${playlistId}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`\r\n                }\r\n            });\r\n            setPlaylistDetails(response.data);\r\n        } catch (error) {\r\n            console.error('플레이리스트 정보를 가져오는 중 오류 발생:', error);\r\n        }\r\n    };\r\n\r\n    const playPlaylist = async () => {\r\n        try {\r\n            await axios.post('http://127.0.0.1:8000/create_and_play_playlist');\r\n            fetchLatestPlaylist(); // 새로고침 없이 최신 플레이리스트 업데이트\r\n        } catch (error) {\r\n            console.error('플레이리스트 재생 중 오류 발생:', error);\r\n        }\r\n    };\r\n\r\n    const playTrack = async (trackUri) => {\r\n        try {\r\n            const response = await axios.post('https://accounts.spotify.com/api/token', null, {\r\n                params: {\r\n                    grant_type: 'refresh_token',\r\n                    refresh_token: playlistDetails.refresh_token,\r\n                    client_id: 'ac56d5b5d54b42f18ebdae8323547f75',\r\n                    client_secret: process.env.REACT_APP_CLIENT_SECRET,\r\n                },\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n            });\r\n            const accessToken = response.data.access_token;\r\n\r\n            await axios.put(\r\n                `https://api.spotify.com/v1/me/player/play`,\r\n                {\r\n                    uris: [trackUri],\r\n                },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${accessToken}`,\r\n                    },\r\n                }\r\n            );\r\n        } catch (error) {\r\n            console.error('트랙 재생 중 오류 발생:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container style={containerStyle}>\r\n            <img\r\n                src=\"/cartune-logo-white.png\"\r\n                width=\"70\"\r\n                height=\"70\"\r\n                className=\"align-top mx-5 mb-5\"\r\n                alt=\"logo\"\r\n                onClick={onClickHandler}\r\n            />\r\n            <button\r\n                className=\"btn btn-primary play-button\"\r\n                onClick={playPlaylist}\r\n            >\r\n                <BsFillPlayFill size={24} /> Play\r\n            </button>\r\n            <Row className=\"px-5\">\r\n                <Col className=\"col-6\">\r\n                    {playlistDetails && (\r\n                        <div className=\"border-5 h-[500px] mx-5 position-relative\">\r\n                            <img\r\n                                src={playlistDetails.images[0].url}\r\n                                alt=\"Playlist Cover\"\r\n                                className=\"img-fluid playlist-cover\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </Col>\r\n                <Col className=\"col-6 text-align-center\">\r\n                    <h1 className=\"d-flex text-between px-4\">\r\n                        {playlistDetails ? playlistDetails.name : 'Playlist'} &nbsp;\r\n                        <FiShare onClick={() => navigate('/playlist/send-email')} className=\"text-end\" width={200} height={200} />\r\n                    </h1>\r\n                    {playlistDetails && (\r\n                        <div className=\"track-list\">\r\n                            {playlistDetails.tracks.items.map((item, index) => (\r\n                                <div key={index} className=\"track-item\" onClick={() => playTrack(item.track.uri)}>\r\n                                    <div className=\"track-index\">{index + 1}</div>\r\n                                    <img src={item.track.album.images[2].url} alt=\"Track Cover\" className=\"track-cover\" />\r\n                                    <div className=\"track-info\">\r\n                                        <div className=\"track-name\">{item.track.name}</div>\r\n                                        <div className=\"track-artists\">{item.track.artists.map(artist => artist.name).join(', ')}</div>\r\n                                    </div>\r\n                                    <div className=\"track-duration\">{Math.floor(item.track.duration_ms / 60000)}:{Math.floor((item.track.duration_ms % 60000) / 1000).toFixed(0).padStart(2, '0')}</div>\r\n                                </div>\r\n                            ))}\r\n\r\n                        </div>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Playlist;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/music/Playlist.js b/src/pages/music/Playlist.js
--- a/src/pages/music/Playlist.js	(revision b23cd4b8bfc87164fdbd52cb5bceaf7bd5089be7)
+++ b/src/pages/music/Playlist.js	(date 1720852660362)
@@ -1,7 +1,6 @@
 import React, { useState } from 'react';
 import { Col, Container, Row } from "react-bootstrap";
 import { FiShare } from "react-icons/fi";
-import { useNavigate } from "react-router-dom";
 import axios from 'axios';
 import { BsFillPlayFill } from "react-icons/bs";
 import './Playlist.css';  // CSS 파일 추가
